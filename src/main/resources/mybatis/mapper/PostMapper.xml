<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.candyacao.mapper.PostMapper">
    <resultMap id="BaseResultMap" type="PostEntity">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="authorID" jdbcType="VARCHAR" property="authorID"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="summary" jdbcType="VARCHAR" property="summary"/>
        <result column="photoLink" jdbcType="VARCHAR" property="photoLink"/>
        <result column="createDate" jdbcType="DATE" property="createDate"/>
    </resultMap>
    <sql id="Base_Column_List">
        id
        ,
        content,
        authorID,
        title,
        summary,
        photoLink,
        createDate
    </sql>
    <sql id="Base_Post_List">
        content
        ,
        authorID,
        title,
        summary,
        photoLink,
        createDate
    </sql>

    <insert id="insert" parameterType="PostEntity">
        insert into post
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="authorID != null">
                authorID,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="summary != null">
                summary,
            </if>
            <if test="photoLink != null">
                photoLink,
            </if>
            <if test="createDate != null">
                createDate,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                #{content,jdbcType=VARCHAR},
            </if>
            <if test="authorID != null">
                #{authorID,jdbcType=VARCHAR},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="summary != null">
                #{summary,jdbcType=VARCHAR},
            </if>
            <if test="photoLink != null">
                #{photoLink,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=DATE},
            </if>
        </trim>
    </insert>

    <resultMap id="detailedPostResultMap" type="PostEntity">
        <constructor>
            <idArg column="post_id" javaType="String"/>
        </constructor>
        <result column="post_content" jdbcType="VARCHAR" property="content"/>
        <result column="post_authorID" jdbcType="VARCHAR" property="authorID"/>
        <result column="post_title" jdbcType="VARCHAR" property="title"/>
        <result column="post_summary" jdbcType="VARCHAR" property="summary"/>
        <result column="post_photoLink" jdbcType="VARCHAR" property="photoLink"/>
        <result column="post_createDate" jdbcType="DATE" property="createDate"/>
        <collection property="comments" ofType="CommentEntity">
            <id property="id" column="comment_id"/>
            <result property="createDate" column="comment_createDate"/>
            <result property="content" column="comment_content"/>
            <result property="postID" column="post_id"/>
            <association property="user" javaType="UserEntity">
                <id property="id" column="comment_user_id"/>
                <result property="userName" column="user_username"/>
                <result property="passWord" column="user_passWord"/>
                <result property="userSex" column="user_userSex"/>
                <result property="nickName" column="user_nick_name"/>
            </association>
        </collection>
    </resultMap>
    <select id="selectByID" parameterType="java.lang.String" resultMap="detailedPostResultMap">
        SELECT
            u.*,
            USERS.nick_name AS user_nick_name,
            USERS.userName  AS user_username,
            USERS.PASSWORD  AS user_passWord,
            USERS.user_sex  AS user_userSex
        FROM
            (
                SELECT
                    COMMENT.id         AS comment_id,
                    COMMENT.userID     AS comment_user_id,
                    COMMENT.content    AS comment_content,
                    COMMENT.createDate AS comment_createDate,
                    COMMENT.postID     AS post_id,
                    post.title         AS post_title,
                    post.summary       AS post_summary,
                    post.content       AS post_content,
                    post.photoLink     AS post_photoLink,
                    post.createDate    AS post_createDate,
                    post.authorID      AS post_authorID
                FROM
                    post
                        LEFT OUTER JOIN COMMENT ON COMMENT.postID = post.id
                where post.id = #{id,jdbcType=VARCHAR}
            ) u
                LEFT OUTER JOIN users ON users.id = u.comment_user_id
    </select>
    <select id="getAllPosts" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from post
        where authorID=#{authorID,jdbcType=VARCHAR}
    </select>
    <delete id="delete" parameterType="java.lang.String">
        delete
        from post
        where id = #{id,jdbcType=VARCHAR}
    </delete>
</mapper>
